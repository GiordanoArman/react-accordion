import type { NextPage } from 'next';
import Head from 'next/head';
import { useRef, useEffect, forwardRef } from 'react';
import {
  Accordion,
  AccordionItem as Item,
  AccordionItemProps,
  ControlledAccordion,
  useAccordionProvider
} from '@szhsin/react-accordion';
import styles from '../styles/Home.module.css';

const AccordionItem = forwardRef<HTMLDivElement, AccordionItemProps>((props, ref) => (
  <Item
    {...props}
    ref={ref}
    contentProps={{ ...props.contentProps, className: styles.itemContent }}
    panelProps={{ ...props.panelProps, style: { padding: '1rem' } }}
  />
));

AccordionItem.displayName = 'MyAccordionItem';

const panelRef = (element: HTMLDivElement | null) => console.log('panelRef', element);

const Home: NextPage = () => {
  const providerValue = useAccordionProvider({
    mountOnEnter: true,
    transition: true,
    transitionTimeout: 300,
    onStateChange: (e) =>
      e.key === 'key1' && e.current.isResolved && console.log('state changed:', e.current.state)
  });
  const { toggle } = providerValue;
  const accordionRef = useRef<HTMLDivElement>(null);
  const itemRef = useRef<HTMLDivElement>(null);
  useEffect(() => {
    console.log('accordionRef', accordionRef.current);
    console.log('itemRef', itemRef.current);
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div style={{ marginBottom: '2rem' }}>
          <button onClick={() => toggle('key1')}>Toggle 1</button>
          <button onClick={() => toggle(3, true)}>Open 3</button>
          <button onClick={() => toggle(3, false)}>Close 3</button>
        </div>
        <ControlledAccordion
          ref={accordionRef}
          providerValue={providerValue}
          id="ac1"
          onMouseLeave={() => console.log('mouse leave accordion')}
        >
          <AccordionItem
            headerProps={{
              className: (e) => {
                return e.state;
              },
              'aria-labelledby': '33',
              'data-testid': 32
            }}
            panelProps={{ ref: panelRef }}
            header={({ states: { isEnter } }) => `header 1 (${isEnter})`}
            itemKey="key1"
            onMouseEnter={() => console.log('mouse enter item 1')}
            className={({ state }) => (state === 'entered' ? 'open' : 'closed')}
          >
            content 1<textarea />
          </AccordionItem>
          <AccordionItem
            header="header 2"
            initialEntered
            style={{ border: '1px solid' }}
            ref={itemRef}
          >
            content 2<div data-testid="3">more</div>
            <Accordion allowMultiple ref={console.log}>
              <AccordionItem header="header 2.1">content 1</AccordionItem>
              <AccordionItem header="header 2.2">
                content 2<div>more</div>
              </AccordionItem>
              <AccordionItem header="header 2.3">
                content 3<div>more</div>
                <div style={{ height: 500 }}>more</div>
              </AccordionItem>
            </Accordion>
          </AccordionItem>
          <AccordionItem header="header 3" itemKey={3} buttonProps={{ 'data-testid': 'button3' }}>
            {({ toggle }) => (
              <>
                content 3<div>more</div>
                <Accordion>
                  <AccordionItem header="header 3.1">content 3.1</AccordionItem>
                </Accordion>
                <button onClick={() => toggle(false)}>Close</button>
              </>
            )}
          </AccordionItem>
        </ControlledAccordion>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Home;
